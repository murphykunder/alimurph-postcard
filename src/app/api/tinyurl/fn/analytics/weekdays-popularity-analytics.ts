/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { WeekdaysPopularityAnalyticsResponse } from '../../models/weekdays-popularity-analytics-response';

export interface WeekdaysPopularityAnalytics$Params {

/**
 * Datetime, indicating start datetime of analytics report.
 */
  from: string;

/**
 * Datetime, indicating end datetime of analytics report. Will default to current time.
 */
  to?: string;

/**
 * TinyURL to get analytics for
 */
  alias?: string;

/**
 * Tag to get analytics for
 */
  tag?: string;
}

export function weekdaysPopularityAnalytics(http: HttpClient, rootUrl: string, params: WeekdaysPopularityAnalytics$Params, context?: HttpContext): Observable<StrictHttpResponse<WeekdaysPopularityAnalyticsResponse>> {
  const rb = new RequestBuilder(rootUrl, weekdaysPopularityAnalytics.PATH, 'get');
  if (params) {
    rb.query('from', params.from, {});
    rb.query('to', params.to, {});
    rb.query('alias', params.alias, {});
    rb.query('tag', params.tag, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<WeekdaysPopularityAnalyticsResponse>;
    })
  );
}

weekdaysPopularityAnalytics.PATH = '/analytics/popularity/weekday';
